on:
  push:
    branches:
      - develop

# TEST 용으로 PR 에서도 활성화 되도록 함
#  pull_request:
#    branches:
#      - develop

jobs:
  build_application:
    name: build application and make jar file
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      # Build Project
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Set Redis
        run: docker compose -f docker-compose-test.yml up -d

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0'

      - name: Set Permission to gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      # Build Docker Image & Push
      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image & Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_IMAGE_TAG }}

      # Deploy
      - name: Access to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          port: ${{ secrets.EC2_PORT }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            sudo docker pull ${{ secrets.DOCKER_IMAGE_TAG }}
            sudo docker compose up -d
            sudo docker image prune -a -f

